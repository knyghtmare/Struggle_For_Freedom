#textdomain wesnoth-Struggle_For_Freedom

#define XP_MODIFIER_SFF
    experience_modifier={ON_DIFFICULTY 100 120 150}
#enddef

#define RECRUIT ONEASY ONNORMAL ONHARD
#ifdef EASY
    recruit={ONEASY}
#endif
#ifdef NORMAL
    recruit={ONNORMAL}
#endif
#ifdef HARD
    recruit={ONHARD}
#endif
#enddef

#define OBJECTIVE_TO_BONUS _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        red=10
        green=180
        blue=180
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_WIN_DONE _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        red=50
        green=50
        blue=50
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_WIN _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_LOSE _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        condition=lose
    [/objective]
#enddef

#define REDRAW
    [redraw][/redraw]
#enddef

#define DELAY TIME
    [delay]
        time={TIME}
    [/delay]
#enddef

#define TERRAIN X Y LETTER
    [terrain]
        x={X}
        y={Y}
        terrain={LETTER}
    [/terrain]
#enddef

#define ENDLEVEL_VICTORY BONUS
    {VICTORY_MUSIC}
    [endlevel]
        result=victory
        bonus={BONUS}
        {NEW_GOLD_CARRYOVER 40 }
    [/endlevel]
#enddef

#define ENDLEVEL_CONTINUE
    [endlevel]
        result=victory
        bonus=no
        {NEW_GOLD_CARRYOVER 100}
        linger_mode=no
        carryover_report=no
        replay_save=no
    [/endlevel]
#enddef

#define ENDLEVEL_DEFEAT
    {DEFEAT_MUSIC}
    [endlevel]
        result=defeat
    [/endlevel]
#enddef

#define DEFEAT_MUSIC
    [set_variable]
        name=__utils_musicselect_result
        rand=defeat.ogg,defeat2.ogg
    [/set_variable]
    [music]
        name=$__utils_musicselect_result
        immediate=yes
        play_once=yes
    [/music]
    [music]
        name=silence.ogg
        append=yes
    [/music]
    {CLEAR_VARIABLE __utils_musicselect_result}
#enddef

#define VICTORY_MUSIC
    [set_variable]
        name=__utils_musicselect_result
        rand=victory.ogg,victory2.ogg
    [/set_variable]
    [music]
        name=$__utils_musicselect_result
        immediate=yes
        play_once=yes
    [/music]
    [music]
        name=silence.ogg
        append=yes
    [/music]
    {CLEAR_VARIABLE __utils_musicselect_result}
#enddef

#define SOUND NAME
    [sound]
        name={NAME}
    [/sound]
#enddef

#define RECALL_FILTERED GUY
    [recall]
        {GUY}
    [/recall]
#enddef

#define GET_GOLD SIDE EASY NORMAL HARD
#ifdef EASY
    [gold]
        side={SIDE}
        amount={EASY}
    [/gold]
#endif
#ifdef NORMAL
    [gold]
        side={SIDE}
        amount={NORMAL}
    [/gold]
#endif
#ifdef HARD
    [gold]
        side={SIDE}
        amount={HARD}
    [/gold]
#endif
#enddef

#define RECT X1 X2 Y1 Y2
    x={X1}-{X2}
    y={Y1}-{Y2}
#enddef

#define HIDDEN_TEAM
    hidden=yes
#enddef

#define PLAY_MUSIC_IMMEDIATE MUSICNAME
    [music]
        name={MUSICNAME}
        immediate=yes
    [/music]
#enddef

#define NO_ECONOMY
    gold=0
    income=-2
    village_gold=0
    village_support=0
#enddef

#define LEADER_JOINS_BATTLE SIDE
    # have the leaders
    # join the battle when recruiting is finished. This saves the player
    # from spending time to chase them down at the end of the battle.
    [event]
        name=side {SIDE} turn
        first_time_only=no
        [store_gold]
            side={SIDE}
        [/store_gold]
        [if]
            [variable]
                name=gold
                less_than_equal_to=15 # Doesn't have to be 0, just less than the cheapest recruit
            [/variable]
            [then]
                [modify_side]
                    side={SIDE}
                    [ai]
                        leader_aggression=0.75
                        leader_ignores_keep=yes
                    [/ai]
                [/modify_side]
            [/then]
        [/if]
        [clear_variable]
            name=gold
        [/clear_variable]
    [/event]
#enddef
